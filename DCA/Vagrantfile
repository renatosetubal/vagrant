# -*- mode: ruby -*-
# vi: set ft=ruby :
machines = {
  "master" => {"memory" => "2048", "cpu" => "2", "ip" => "100", "image" => "ubuntu/bionic64", "script" => "scripts/installdocker.sh"},
  "node01" => {"memory" => "1024", "cpu" => "2", "ip" => "110", "image" => "ubuntu/bionic64", "script" => "scripts/installdocker.sh"},
  "node02" => {"memory" => "1024", "cpu" => "2", "ip" => "120", "image" => "almalinux/9", "script" => "scripts/installdockeralma.sh"},
  "registry" => {"memory" => "2048", "cpu" => "2", "ip" => "200", "image" => "ubuntu/bionic64", "script" => "scripts/installdocker.sh"}
}

Vagrant.configure("2") do |config|
  
  machines.each do |name, conf|
    config.vm.define "#{name}" do |machine|
      machine.vm.box_check_update = false
      machine.vbguest.auto_update = false
      machine.vm.box = "#{conf["image"]}"
      machine.vm.hostname = "#{name}.docker-dca.example"
      machine.vm.network "private_network", ip: "10.20.20.#{conf["ip"]}"
      machine.vm.provider "virtualbox" do |vb|
        vb.name = "#{name}"
        vb.memory = conf["memory"]
        vb.cpus = conf["cpu"]
        vb.customize ["modifyvm", :id,"--groups", "/Dock 28 er-DCA"]
      end
      machine.vm.provision "shell", path: "#{conf["script"]}"
      machine.vm.provision "shell", inline: "hostnamectl set-hostname #{name}.docker-dca.example" 
         config.vm.provision "shell", inline: <<-SHELL
         HOSTS=$(head -n7 /etc/hosts)
         echo -e "$HOSTS" > /etc/hosts
         echo '192.168.200.10 master.docker.example' >> /etc/hosts
         echo '192.168.200.21 node01.docker.example' >>  /etc/hosts
         echo '192.168.200.22 node02.docker.example' >>  /etc/hosts
         echo '192.168.200.50 registry.docker.example' >> /etc/hosts
       SHELL
     end
  end
end